// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: notes_proto/proto/note/note.proto

package note

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateNoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNoteRequest) Reset() {
	*x = CreateNoteRequest{}
	mi := &file_notes_proto_proto_note_note_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNoteRequest) ProtoMessage() {}

func (x *CreateNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notes_proto_proto_note_note_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNoteRequest.ProtoReflect.Descriptor instead.
func (*CreateNoteRequest) Descriptor() ([]byte, []int) {
	return file_notes_proto_proto_note_note_proto_rawDescGZIP(), []int{0}
}

func (x *CreateNoteRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CreateNoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NoteId        int64                  `protobuf:"varint,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNoteResponse) Reset() {
	*x = CreateNoteResponse{}
	mi := &file_notes_proto_proto_note_note_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNoteResponse) ProtoMessage() {}

func (x *CreateNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notes_proto_proto_note_note_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNoteResponse.ProtoReflect.Descriptor instead.
func (*CreateNoteResponse) Descriptor() ([]byte, []int) {
	return file_notes_proto_proto_note_note_proto_rawDescGZIP(), []int{1}
}

func (x *CreateNoteResponse) GetNoteId() int64 {
	if x != nil {
		return x.NoteId
	}
	return 0
}

type ReadNoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NoteId        int64                  `protobuf:"varint,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadNoteRequest) Reset() {
	*x = ReadNoteRequest{}
	mi := &file_notes_proto_proto_note_note_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadNoteRequest) ProtoMessage() {}

func (x *ReadNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notes_proto_proto_note_note_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadNoteRequest.ProtoReflect.Descriptor instead.
func (*ReadNoteRequest) Descriptor() ([]byte, []int) {
	return file_notes_proto_proto_note_note_proto_rawDescGZIP(), []int{2}
}

func (x *ReadNoteRequest) GetNoteId() int64 {
	if x != nil {
		return x.NoteId
	}
	return 0
}

type ReadNoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadNoteResponse) Reset() {
	*x = ReadNoteResponse{}
	mi := &file_notes_proto_proto_note_note_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadNoteResponse) ProtoMessage() {}

func (x *ReadNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notes_proto_proto_note_note_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadNoteResponse.ProtoReflect.Descriptor instead.
func (*ReadNoteResponse) Descriptor() ([]byte, []int) {
	return file_notes_proto_proto_note_note_proto_rawDescGZIP(), []int{3}
}

func (x *ReadNoteResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type DeleteNoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NoteId        int64                  `protobuf:"varint,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNoteRequest) Reset() {
	*x = DeleteNoteRequest{}
	mi := &file_notes_proto_proto_note_note_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoteRequest) ProtoMessage() {}

func (x *DeleteNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notes_proto_proto_note_note_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoteRequest.ProtoReflect.Descriptor instead.
func (*DeleteNoteRequest) Descriptor() ([]byte, []int) {
	return file_notes_proto_proto_note_note_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteNoteRequest) GetNoteId() int64 {
	if x != nil {
		return x.NoteId
	}
	return 0
}

type DeleteNoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNoteResponse) Reset() {
	*x = DeleteNoteResponse{}
	mi := &file_notes_proto_proto_note_note_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoteResponse) ProtoMessage() {}

func (x *DeleteNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notes_proto_proto_note_note_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoteResponse.ProtoReflect.Descriptor instead.
func (*DeleteNoteResponse) Descriptor() ([]byte, []int) {
	return file_notes_proto_proto_note_note_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteNoteResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_notes_proto_proto_note_note_proto protoreflect.FileDescriptor

const file_notes_proto_proto_note_note_proto_rawDesc = "" +
	"\n" +
	"!notes_proto/proto/note/note.proto\x12\x04note\x1a'googleapis/google/api/annotations.proto\"-\n" +
	"\x11CreateNoteRequest\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\"-\n" +
	"\x12CreateNoteResponse\x12\x17\n" +
	"\anote_id\x18\x01 \x01(\x03R\x06noteId\"*\n" +
	"\x0fReadNoteRequest\x12\x17\n" +
	"\anote_id\x18\x01 \x01(\x03R\x06noteId\",\n" +
	"\x10ReadNoteResponse\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\",\n" +
	"\x11DeleteNoteRequest\x12\x17\n" +
	"\anote_id\x18\x01 \x01(\x03R\x06noteId\",\n" +
	"\x12DeleteNoteResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status2\x9a\x02\n" +
	"\x04Note\x12\\\n" +
	"\n" +
	"CreateNote\x12\x17.note.CreateNoteRequest\x1a\x18.note.CreateNoteResponse\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/v1/notes/create\x12V\n" +
	"\bReadNote\x12\x15.note.ReadNoteRequest\x1a\x16.note.ReadNoteResponse\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/v1/notes/{note_id}\x12\\\n" +
	"\n" +
	"DeleteNote\x12\x17.note.DeleteNoteRequest\x1a\x18.note.DeleteNoteResponse\"\x1b\x82\xd3\xe4\x93\x02\x15*\x13/v1/notes/{note_id}B\x14Z\x12emil.note.v1;notesb\x06proto3"

var (
	file_notes_proto_proto_note_note_proto_rawDescOnce sync.Once
	file_notes_proto_proto_note_note_proto_rawDescData []byte
)

func file_notes_proto_proto_note_note_proto_rawDescGZIP() []byte {
	file_notes_proto_proto_note_note_proto_rawDescOnce.Do(func() {
		file_notes_proto_proto_note_note_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_notes_proto_proto_note_note_proto_rawDesc), len(file_notes_proto_proto_note_note_proto_rawDesc)))
	})
	return file_notes_proto_proto_note_note_proto_rawDescData
}

var file_notes_proto_proto_note_note_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_notes_proto_proto_note_note_proto_goTypes = []any{
	(*CreateNoteRequest)(nil),  // 0: note.CreateNoteRequest
	(*CreateNoteResponse)(nil), // 1: note.CreateNoteResponse
	(*ReadNoteRequest)(nil),    // 2: note.ReadNoteRequest
	(*ReadNoteResponse)(nil),   // 3: note.ReadNoteResponse
	(*DeleteNoteRequest)(nil),  // 4: note.DeleteNoteRequest
	(*DeleteNoteResponse)(nil), // 5: note.DeleteNoteResponse
}
var file_notes_proto_proto_note_note_proto_depIdxs = []int32{
	0, // 0: note.Note.CreateNote:input_type -> note.CreateNoteRequest
	2, // 1: note.Note.ReadNote:input_type -> note.ReadNoteRequest
	4, // 2: note.Note.DeleteNote:input_type -> note.DeleteNoteRequest
	1, // 3: note.Note.CreateNote:output_type -> note.CreateNoteResponse
	3, // 4: note.Note.ReadNote:output_type -> note.ReadNoteResponse
	5, // 5: note.Note.DeleteNote:output_type -> note.DeleteNoteResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_notes_proto_proto_note_note_proto_init() }
func file_notes_proto_proto_note_note_proto_init() {
	if File_notes_proto_proto_note_note_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_notes_proto_proto_note_note_proto_rawDesc), len(file_notes_proto_proto_note_note_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notes_proto_proto_note_note_proto_goTypes,
		DependencyIndexes: file_notes_proto_proto_note_note_proto_depIdxs,
		MessageInfos:      file_notes_proto_proto_note_note_proto_msgTypes,
	}.Build()
	File_notes_proto_proto_note_note_proto = out.File
	file_notes_proto_proto_note_note_proto_goTypes = nil
	file_notes_proto_proto_note_note_proto_depIdxs = nil
}
